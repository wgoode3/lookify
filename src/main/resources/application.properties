spring.datasource.url=jdbc:mysql://localhost:3306/songs?useUnicode=yes&characterEncoding=UTF-8
spring.datasource.username=test
spring.datasource.password=Test1234
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.datasource.tomcat.connection-properties=useUnicode=true;characterEncoding=utf-8;

spring.mvc.view.prefix: /WEB-INF/
spring.mvc.view.suffix: .jsp

# to get my database to accept utf-8 I had to run the following in mysql

# SELECT `tables`.`TABLE_NAME`, `collations`.`character_set_name`
# FROM `information_schema`.`TABLES` AS `tables`, `information_schema`.`COLLATION_CHARACTER_SET_APPLICABILITY` AS `collations`
# WHERE `tables`.`table_schema` = DATABASE() AND `collations`.`collation_name` = `tables`.`table_collation`;

# ALTER DATABASE songs CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
# ALTER TABLE song CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

# https://stackoverflow.com/questions/1168036/how-to-fix-incorrect-string-value-errors
# https://stackoverflow.com/questions/6115612/how-to-convert-an-entire-mysql-database-characterset-and-collation-to-utf-8